Wed May  1 15:45:07 EDT 2024
Your job is running on node(s):
adroit-h11g2
Working directory:
/scratch/network/hw8161/CoFiPruning/tasks/cola_mod2_0.95
nvidia-smi output:
Wed May  1 15:45:07 2024       
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 545.23.08              Driver Version: 545.23.08    CUDA Version: 12.3     |
|-----------------------------------------+----------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |
|                                         |                      |               MIG M. |
|=========================================+======================+======================|
|   0  NVIDIA A100-PCIE-40GB          On  | 00000000:CA:00.0 Off |                    0 |
| N/A   31C    P0              36W / 250W |      2MiB / 40960MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
                                                                                         
+---------------------------------------------------------------------------------------+
| Processes:                                                                            |
|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |
|        ID   ID                                                             Usage      |
|=======================================================================================|
|  No running processes found                                                           |
+---------------------------------------------------------------------------------------+
Using the `WAND_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
05/01/2024 15:45:12 - WARNING - __main__ - Process rank: -1, device: cuda:0, n_gpu: 1distributed training: False, 16-bits training: False
05/01/2024 15:45:12 - INFO - __main__ - Training/evaluation parameters TrainingArguments(
_n_gpu=1,
adafactor=False,
adam_beta1=0.9,
adam_beta2=0.999,
adam_epsilon=1e-08,
bf16=False,
bf16_full_eval=False,
dataloader_drop_last=False,
dataloader_num_workers=0,
dataloader_pin_memory=True,
ddp_bucket_cap_mb=None,
ddp_find_unused_parameters=None,
debug=[],
deepspeed=None,
disable_tqdm=False,
do_eval=True,
do_predict=False,
do_train=True,
eval_accumulation_steps=None,
eval_steps=50,
evaluation_strategy=IntervalStrategy.STEPS,
fp16=False,
fp16_backend=auto,
fp16_full_eval=False,
fp16_opt_level=O1,
gradient_accumulation_steps=1,
gradient_checkpointing=False,
greater_is_better=None,
group_by_length=False,
half_precision_backend=auto,
hub_model_id=None,
hub_strategy=HubStrategy.EVERY_SAVE,
hub_token=<HUB_TOKEN>,
ignore_data_skip=False,
label_names=None,
label_smoothing_factor=0.0,
learning_rate=3e-05,
length_column_name=length,
load_best_model_at_end=False,
local_rank=-1,
log_level=-1,
log_level_replica=-1,
log_on_each_node=True,
logging_dir=/scratch/network/hw8161/CoFiPruning/out/CoLA/CoFi_mod_2/CoLA_sparsity0.95/FT-lr3e-5/runs/May01_15-45-12_adroit-h11g2,
logging_first_step=False,
logging_nan_inf_filter=True,
logging_steps=100,
logging_strategy=IntervalStrategy.STEPS,
lr_scheduler_type=SchedulerType.LINEAR,
max_grad_norm=1.0,
max_steps=-1,
metric_for_best_model=None,
mp_parameters=,
no_cuda=False,
num_train_epochs=20.0,
optim=OptimizerNames.ADAMW_HF,
output_dir=/scratch/network/hw8161/CoFiPruning/out/CoLA/CoFi_mod_2/CoLA_sparsity0.95/FT-lr3e-5,
overwrite_output_dir=True,
past_index=-1,
per_device_eval_batch_size=32,
per_device_train_batch_size=64,
prediction_loss_only=False,
push_to_hub=False,
push_to_hub_model_id=None,
push_to_hub_organization=None,
push_to_hub_token=<PUSH_TO_HUB_TOKEN>,
remove_unused_columns=True,
report_to=[],
resume_from_checkpoint=None,
run_name=/scratch/network/hw8161/CoFiPruning/out/CoLA/CoFi_mod_2/CoLA_sparsity0.95/FT-lr3e-5,
save_on_each_node=False,
save_steps=0,
save_strategy=IntervalStrategy.STEPS,
save_total_limit=None,
seed=57,
sharded_ddp=[],
skip_memory_metrics=True,
tf32=None,
tpu_metrics_debug=False,
tpu_num_cores=None,
use_legacy_prediction_loop=False,
warmup_ratio=0.0,
warmup_steps=0,
weight_decay=0.0,
xpu_backend=None,
)
05/01/2024 15:45:12 - INFO - __main__ - Model Arguments:
05/01/2024 15:45:12 - INFO - __main__ - model_name_or_path = bert-base-uncased
05/01/2024 15:45:12 - INFO - __main__ - config_name = None
05/01/2024 15:45:12 - INFO - __main__ - tokenizer_name = None
05/01/2024 15:45:12 - INFO - __main__ - cache_dir = /scratch/network/hw8161/.cache/
05/01/2024 15:45:12 - INFO - __main__ - use_fast_tokenizer = True
05/01/2024 15:45:12 - INFO - __main__ - model_revision = main
05/01/2024 15:45:12 - INFO - __main__ - use_auth_token = False
05/01/2024 15:45:12 - INFO - __main__ - Data Arguments:
05/01/2024 15:45:12 - INFO - __main__ - task_name = cola
05/01/2024 15:45:12 - INFO - __main__ - dataset_name = None
05/01/2024 15:45:12 - INFO - __main__ - t_name = None
05/01/2024 15:45:12 - INFO - __main__ - dataset_config_name = None
05/01/2024 15:45:12 - INFO - __main__ - max_seq_length = 128
05/01/2024 15:45:12 - INFO - __main__ - overwrite_cache = False
05/01/2024 15:45:12 - INFO - __main__ - pad_to_max_length = True
05/01/2024 15:45:12 - INFO - __main__ - max_train_samples = None
05/01/2024 15:45:12 - INFO - __main__ - max_eval_samples = None
05/01/2024 15:45:12 - INFO - __main__ - max_predict_samples = None
05/01/2024 15:45:12 - INFO - __main__ - train_file = None
05/01/2024 15:45:12 - INFO - __main__ - validation_file = None
05/01/2024 15:45:12 - INFO - __main__ - test_file = None
05/01/2024 15:45:12 - INFO - __main__ - Training Arguments:
05/01/2024 15:45:12 - INFO - __main__ - output_dir = /scratch/network/hw8161/CoFiPruning/out/CoLA/CoFi_mod_2/CoLA_sparsity0.95/FT-lr3e-5
05/01/2024 15:45:12 - INFO - __main__ - overwrite_output_dir = True
05/01/2024 15:45:12 - INFO - __main__ - do_train = True
05/01/2024 15:45:12 - INFO - __main__ - do_eval = True
05/01/2024 15:45:12 - INFO - __main__ - do_predict = False
05/01/2024 15:45:12 - INFO - __main__ - evaluation_strategy = IntervalStrategy.STEPS
05/01/2024 15:45:12 - INFO - __main__ - prediction_loss_only = False
05/01/2024 15:45:12 - INFO - __main__ - per_device_train_batch_size = 64
05/01/2024 15:45:12 - INFO - __main__ - per_device_eval_batch_size = 32
05/01/2024 15:45:12 - INFO - __main__ - per_gpu_train_batch_size = None
05/01/2024 15:45:12 - INFO - __main__ - per_gpu_eval_batch_size = None
05/01/2024 15:45:12 - INFO - __main__ - gradient_accumulation_steps = 1
05/01/2024 15:45:12 - INFO - __main__ - eval_accumulation_steps = None
05/01/2024 15:45:12 - INFO - __main__ - learning_rate = 3e-05
05/01/2024 15:45:12 - INFO - __main__ - weight_decay = 0.0
05/01/2024 15:45:12 - INFO - __main__ - adam_beta1 = 0.9
05/01/2024 15:45:12 - INFO - __main__ - adam_beta2 = 0.999
05/01/2024 15:45:12 - INFO - __main__ - adam_epsilon = 1e-08
05/01/2024 15:45:12 - INFO - __main__ - max_grad_norm = 1.0
05/01/2024 15:45:12 - INFO - __main__ - num_train_epochs = 20.0
05/01/2024 15:45:12 - INFO - __main__ - max_steps = -1
05/01/2024 15:45:12 - INFO - __main__ - lr_scheduler_type = SchedulerType.LINEAR
05/01/2024 15:45:12 - INFO - __main__ - warmup_ratio = 0.0
05/01/2024 15:45:12 - INFO - __main__ - warmup_steps = 0
05/01/2024 15:45:12 - INFO - __main__ - log_level = -1
05/01/2024 15:45:12 - INFO - __main__ - log_level_replica = -1
05/01/2024 15:45:12 - INFO - __main__ - log_on_each_node = True
05/01/2024 15:45:12 - INFO - __main__ - logging_dir = /scratch/network/hw8161/CoFiPruning/out/CoLA/CoFi_mod_2/CoLA_sparsity0.95/FT-lr3e-5/runs/May01_15-45-12_adroit-h11g2
05/01/2024 15:45:12 - INFO - __main__ - logging_strategy = IntervalStrategy.STEPS
05/01/2024 15:45:12 - INFO - __main__ - logging_first_step = False
05/01/2024 15:45:12 - INFO - __main__ - logging_steps = 100
05/01/2024 15:45:12 - INFO - __main__ - logging_nan_inf_filter = True
05/01/2024 15:45:12 - INFO - __main__ - save_strategy = IntervalStrategy.STEPS
05/01/2024 15:45:12 - INFO - __main__ - save_steps = 0
05/01/2024 15:45:12 - INFO - __main__ - save_total_limit = None
05/01/2024 15:45:12 - INFO - __main__ - save_on_each_node = False
05/01/2024 15:45:12 - INFO - __main__ - no_cuda = False
05/01/2024 15:45:12 - INFO - __main__ - seed = 57
05/01/2024 15:45:12 - INFO - __main__ - bf16 = False
05/01/2024 15:45:12 - INFO - __main__ - fp16 = False
05/01/2024 15:45:12 - INFO - __main__ - fp16_opt_level = O1
05/01/2024 15:45:12 - INFO - __main__ - half_precision_backend = auto
05/01/2024 15:45:12 - INFO - __main__ - bf16_full_eval = False
05/01/2024 15:45:12 - INFO - __main__ - fp16_full_eval = False
05/01/2024 15:45:12 - INFO - __main__ - tf32 = None
05/01/2024 15:45:12 - INFO - __main__ - local_rank = -1
05/01/2024 15:45:12 - INFO - __main__ - xpu_backend = None
05/01/2024 15:45:12 - INFO - __main__ - tpu_num_cores = None
05/01/2024 15:45:12 - INFO - __main__ - tpu_metrics_debug = False
05/01/2024 15:45:12 - INFO - __main__ - debug = []
05/01/2024 15:45:12 - INFO - __main__ - dataloader_drop_last = False
05/01/2024 15:45:12 - INFO - __main__ - eval_steps = 50
05/01/2024 15:45:12 - INFO - __main__ - dataloader_num_workers = 0
05/01/2024 15:45:12 - INFO - __main__ - past_index = -1
05/01/2024 15:45:12 - INFO - __main__ - run_name = /scratch/network/hw8161/CoFiPruning/out/CoLA/CoFi_mod_2/CoLA_sparsity0.95/FT-lr3e-5
05/01/2024 15:45:12 - INFO - __main__ - disable_tqdm = False
05/01/2024 15:45:12 - INFO - __main__ - remove_unused_columns = True
05/01/2024 15:45:12 - INFO - __main__ - label_names = None
05/01/2024 15:45:12 - INFO - __main__ - load_best_model_at_end = False
05/01/2024 15:45:12 - INFO - __main__ - metric_for_best_model = None
05/01/2024 15:45:12 - INFO - __main__ - greater_is_better = None
05/01/2024 15:45:12 - INFO - __main__ - ignore_data_skip = False
05/01/2024 15:45:12 - INFO - __main__ - sharded_ddp = []
05/01/2024 15:45:12 - INFO - __main__ - deepspeed = None
05/01/2024 15:45:12 - INFO - __main__ - label_smoothing_factor = 0.0
05/01/2024 15:45:12 - INFO - __main__ - optim = OptimizerNames.ADAMW_HF
05/01/2024 15:45:12 - INFO - __main__ - adafactor = False
05/01/2024 15:45:12 - INFO - __main__ - group_by_length = False
05/01/2024 15:45:12 - INFO - __main__ - length_column_name = length
05/01/2024 15:45:12 - INFO - __main__ - report_to = []
05/01/2024 15:45:12 - INFO - __main__ - ddp_find_unused_parameters = None
05/01/2024 15:45:12 - INFO - __main__ - ddp_bucket_cap_mb = None
05/01/2024 15:45:12 - INFO - __main__ - dataloader_pin_memory = True
05/01/2024 15:45:12 - INFO - __main__ - skip_memory_metrics = True
05/01/2024 15:45:12 - INFO - __main__ - use_legacy_prediction_loop = False
05/01/2024 15:45:12 - INFO - __main__ - push_to_hub = False
05/01/2024 15:45:12 - INFO - __main__ - resume_from_checkpoint = None
05/01/2024 15:45:12 - INFO - __main__ - hub_model_id = None
05/01/2024 15:45:12 - INFO - __main__ - hub_strategy = HubStrategy.EVERY_SAVE
05/01/2024 15:45:12 - INFO - __main__ - hub_token = None
05/01/2024 15:45:12 - INFO - __main__ - gradient_checkpointing = False
05/01/2024 15:45:12 - INFO - __main__ - fp16_backend = auto
05/01/2024 15:45:12 - INFO - __main__ - push_to_hub_model_id = None
05/01/2024 15:45:12 - INFO - __main__ - push_to_hub_organization = None
05/01/2024 15:45:12 - INFO - __main__ - push_to_hub_token = None
05/01/2024 15:45:12 - INFO - __main__ - mp_parameters = 
05/01/2024 15:45:12 - INFO - __main__ - _n_gpu = 1
05/01/2024 15:45:12 - INFO - __main__ - __cached__setup_devices = cuda:0
05/01/2024 15:45:12 - INFO - __main__ - Additional Arguments:
05/01/2024 15:45:12 - INFO - __main__ - test = False
05/01/2024 15:45:12 - INFO - __main__ - ex_name = CoLA_sparsity0.95
05/01/2024 15:45:12 - INFO - __main__ - pruning_type = None
05/01/2024 15:45:12 - INFO - __main__ - reg_learning_rate = 0.01
05/01/2024 15:45:12 - INFO - __main__ - scheduler_type = none
05/01/2024 15:45:12 - INFO - __main__ - freeze_embeddings = True
05/01/2024 15:45:12 - INFO - __main__ - pretrained_pruned_model = /scratch/network/hw8161/CoFiPruning/out/CoLA/CoFi_mod_2/CoLA_sparsity0.95
05/01/2024 15:45:12 - INFO - __main__ - droprate_init = 0.5
05/01/2024 15:45:12 - INFO - __main__ - temperature = 0.6666666666666666
05/01/2024 15:45:12 - INFO - __main__ - prepruning_finetune_epochs = 4
05/01/2024 15:45:12 - INFO - __main__ - lagrangian_warmup_epochs = 20
05/01/2024 15:45:12 - INFO - __main__ - target_sparsity = 0.95
05/01/2024 15:45:12 - INFO - __main__ - sparsity_epsilon = 0
05/01/2024 15:45:12 - INFO - __main__ - distillation_path = mofyrt/bert-base-uncased-finetuned-cola
05/01/2024 15:45:12 - INFO - __main__ - do_distill = True
05/01/2024 15:45:12 - INFO - __main__ - do_layer_distill = True
05/01/2024 15:45:12 - INFO - __main__ - layer_distill_version = 4
05/01/2024 15:45:12 - INFO - __main__ - distill_loss_alpha = 0.9
05/01/2024 15:45:12 - INFO - __main__ - distill_ce_loss_alpha = 0.1
05/01/2024 15:45:12 - INFO - __main__ - distill_temp = 2.0
05/01/2024 15:45:12 - INFO - datasets.builder - Overwrite dataset info from restored data version.
05/01/2024 15:45:12 - INFO - datasets.info - Loading Dataset info from /scratch/network/hw8161/.cache/glue/cola/1.0.0/a420f5e518f42454003587c47467370329f9fc0c6508d1ae0c45b58ea266a353
05/01/2024 15:45:12 - WARNING - datasets.builder - Reusing dataset glue (/scratch/network/hw8161/.cache/glue/cola/1.0.0/a420f5e518f42454003587c47467370329f9fc0c6508d1ae0c45b58ea266a353)
05/01/2024 15:45:12 - INFO - datasets.info - Loading Dataset info from /scratch/network/hw8161/.cache/glue/cola/1.0.0/a420f5e518f42454003587c47467370329f9fc0c6508d1ae0c45b58ea266a353
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 1009.95it/s]
[INFO|configuration_utils.py:648] 2024-05-01 15:45:12,295 >> loading configuration file https://huggingface.co/bert-base-uncased/resolve/main/config.json from cache at /scratch/network/hw8161/.cache/3c61d016573b14f7f008c02c4e51a366c67ab274726fe2910691e2a761acf43e.37395cee442ab11005bcd270f3c34464dc1704b715b5d7d52b1a461abe3b9e4e
[INFO|configuration_utils.py:684] 2024-05-01 15:45:12,296 >> Model config BertConfig {
  "_name_or_path": "bert-base-uncased",
  "architectures": [
    "BertForMaskedLM"
  ],
  "attention_probs_dropout_prob": 0.1,
  "classifier_dropout": null,
  "finetuning_task": "cola",
  "gradient_checkpointing": false,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "position_embedding_type": "absolute",
  "transformers_version": "4.17.0",
  "type_vocab_size": 2,
  "use_cache": true,
  "vocab_size": 30522
}

[INFO|configuration_utils.py:648] 2024-05-01 15:45:12,297 >> loading configuration file https://huggingface.co/bert-base-uncased/resolve/main/config.json from cache at /scratch/network/hw8161/.cache/3c61d016573b14f7f008c02c4e51a366c67ab274726fe2910691e2a761acf43e.37395cee442ab11005bcd270f3c34464dc1704b715b5d7d52b1a461abe3b9e4e
[INFO|configuration_utils.py:684] 2024-05-01 15:45:12,297 >> Model config BertConfig {
  "_name_or_path": "bert-base-uncased",
  "architectures": [
    "BertForMaskedLM"
  ],
  "attention_probs_dropout_prob": 0.1,
  "classifier_dropout": null,
  "gradient_checkpointing": false,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "position_embedding_type": "absolute",
  "transformers_version": "4.17.0",
  "type_vocab_size": 2,
  "use_cache": true,
  "vocab_size": 30522
}

[INFO|tokenization_utils_base.py:1766] 2024-05-01 15:45:12,300 >> Can't load following files from cache: ['added_tokens_file', 'special_tokens_map_file'] and cannot check if these files are necessary for the tokenizer to operate.
[INFO|tokenization_utils_base.py:1786] 2024-05-01 15:45:12,300 >> loading file https://huggingface.co/bert-base-uncased/resolve/main/vocab.txt from cache at /scratch/network/hw8161/.cache/45c3f7a79a80e1cf0a489e5c62b43f173c15db47864303a55d623bb3c96f72a5.d789d64ebfe299b0e416afc4a169632f903f693095b4629a7ea271d5a0cf2c99
[INFO|tokenization_utils_base.py:1786] 2024-05-01 15:45:12,300 >> loading file https://huggingface.co/bert-base-uncased/resolve/main/tokenizer.json from cache at /scratch/network/hw8161/.cache/534479488c54aeaf9c3406f647aa2ec13648c06771ffe269edabebd4c412da1d.7f2721073f19841be16f41b0a70b600ca6b880c8f3df6f3535cbc704371bdfa4
[INFO|tokenization_utils_base.py:1786] 2024-05-01 15:45:12,300 >> loading file https://huggingface.co/bert-base-uncased/resolve/main/tokenizer_config.json from cache at /scratch/network/hw8161/.cache/c1d7f0a763fb63861cc08553866f1fc3e5a6f4f07621be277452d26d71303b7e.76ea01b4b85ac16e2cec55c398cba7a943d89ab21dfdd973f6630a152e4b9aed
[INFO|configuration_utils.py:648] 2024-05-01 15:45:12,302 >> loading configuration file https://huggingface.co/bert-base-uncased/resolve/main/config.json from cache at /scratch/network/hw8161/.cache/3c61d016573b14f7f008c02c4e51a366c67ab274726fe2910691e2a761acf43e.37395cee442ab11005bcd270f3c34464dc1704b715b5d7d52b1a461abe3b9e4e
[INFO|configuration_utils.py:684] 2024-05-01 15:45:12,303 >> Model config BertConfig {
  "_name_or_path": "bert-base-uncased",
  "architectures": [
    "BertForMaskedLM"
  ],
  "attention_probs_dropout_prob": 0.1,
  "classifier_dropout": null,
  "gradient_checkpointing": false,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "position_embedding_type": "absolute",
  "transformers_version": "4.17.0",
  "type_vocab_size": 2,
  "use_cache": true,
  "vocab_size": 30522
}

Layer 0, heads  pruned.
Layer 1, heads  pruned.
Layer 2, heads  pruned.
Layer 3, heads  pruned.
Layer 4, heads  pruned.
Layer 5, heads  pruned.
Layer 6, heads  pruned.
Layer 7, heads  pruned.
Layer 8, heads  pruned.
Layer 9, heads  pruned.
Layer 10, heads  pruned.
Layer 11, heads  pruned.
Layer: 0
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 1
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 2
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 3
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 4
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 5
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 6
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 7
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 8
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 9
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 10
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 11
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer 0, heads  pruned.
Layer 1, heads  pruned.
Layer 2, heads  pruned.
Layer 3, heads  pruned.
Layer 4, heads  pruned.
Layer 5, heads  pruned.
Layer 6, heads  pruned.
Layer 7, heads  pruned.
Layer 8, heads  pruned.
Layer 9, heads  pruned.
Layer 10, heads  pruned.
Layer 11, heads  pruned.
layer transformation torch.Size([768, 768])
Layer: 0
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 1
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 2
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 3
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 4
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 5
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 6
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 7
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 8
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 9
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 10
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
Layer: 11
query: torch.Size([768, 768])
key: torch.Size([768, 768])
value: torch.Size([768, 768])
output: torch.Size([768, 768])
up: torch.Size([3072, 768])
down: torch.Size([768, 3072])
05/01/2024 15:45:21 - INFO - __main__ - CoFiBertForSequenceClassification(
  (bert): CoFiBertModel(
    (embeddings): CoFiBertEmbeddings(
      (word_embeddings): Embedding(30522, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): CoFiBertEncoder(
      (layer): ModuleList(
        (0): CoFiBertLayer(
          (attention): CoFiBertAttention(
            (self): CoFiBertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): CoFiBertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): CoFiBertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (1): CoFiBertLayer(
          (attention): CoFiBertAttention(
            (self): CoFiBertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): CoFiBertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): CoFiBertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (2): CoFiBertLayer(
          (attention): CoFiBertAttention(
            (self): CoFiBertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): CoFiBertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): CoFiBertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (3): CoFiBertLayer(
          (attention): CoFiBertAttention(
            (self): CoFiBertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): CoFiBertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): CoFiBertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (4): CoFiBertLayer(
          (attention): CoFiBertAttention(
            (self): CoFiBertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): CoFiBertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): CoFiBertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (5): CoFiBertLayer(
          (attention): CoFiBertAttention(
            (self): CoFiBertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): CoFiBertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): CoFiBertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (6): CoFiBertLayer(
          (attention): CoFiBertAttention(
            (self): CoFiBertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): CoFiBertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): CoFiBertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (7): CoFiBertLayer(
          (attention): CoFiBertAttention(
            (self): CoFiBertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): CoFiBertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): CoFiBertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (8): CoFiBertLayer(
          (attention): CoFiBertAttention(
            (self): CoFiBertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): CoFiBertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): CoFiBertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (9): CoFiBertLayer(
          (attention): CoFiBertAttention(
            (self): CoFiBertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): CoFiBertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): CoFiBertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (10): CoFiBertLayer(
          (attention): CoFiBertAttention(
            (self): CoFiBertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): CoFiBertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): CoFiBertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (11): CoFiBertLayer(
          (attention): CoFiBertAttention(
            (self): CoFiBertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): CoFiBertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): CoFiBertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): CoFiLayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (dropout): Dropout(p=0.1, inplace=False)
  (classifier): Linear(in_features=768, out_features=2, bias=True)
  (layer_transformation): Linear(in_features=768, out_features=768, bias=True)
)
05/01/2024 15:45:21 - INFO - __main__ - Model size: 85054464
Traceback (most recent call last):
  File "/scratch/network/hw8161/CoFiPruning/run_glue_prune_mod_2.py", line 401, in <module>
    main()
  File "/scratch/network/hw8161/CoFiPruning/run_glue_prune_mod_2.py", line 230, in main
    model = load_model(os.path.join(additional_args.pretrained_pruned_model, "best"), Model, zs)
  File "/scratch/network/hw8161/CoFiPruning/utils/cofi_utils.py", line 36, in load_model
    assert zs is not None
AssertionError
